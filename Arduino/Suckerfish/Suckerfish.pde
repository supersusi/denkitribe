struct EventData {
  unsigned char delta;
  unsigned char status;
  unsigned char data1;
  unsigned char data2;
};

static const EventData seq00[] = {
  {0x00,0x90,0x45,0x64},
  {0x00,0x90,0x4c,0x64},
  {0x01,0x90,0x70,0x69},
  {0x01,0x90,0x2d,0x64},
  {0x00,0x80,0x45,0x40},
  {0x00,0x80,0x4c,0x40},
  {0x00,0x80,0x70,0x40},
  {0x01,0x80,0x2d,0x40},
  {0x00,0x90,0x45,0x64},
  {0x01,0x90,0x39,0x64},
  {0x00,0x80,0x45,0x40},
  {0x01,0x90,0x2d,0x64},
  {0x00,0x80,0x39,0x40},
  {0x00,0x90,0x6e,0x69},
  {0x01,0x80,0x2d,0x40},
  {0x00,0x90,0x45,0x64},
  {0x00,0x90,0x4c,0x64},
  {0x00,0x80,0x6e,0x40},
  {0x01,0x80,0x45,0x40},
  {0x00,0x90,0x48,0x64},
  {0x00,0x80,0x4c,0x40},
  {0x01,0x90,0x21,0x64},
  {0x00,0x90,0x3c,0x64},
  {0x00,0x80,0x48,0x40},
  {0x00,0x90,0x6c,0x69},
  {0x01,0x80,0x3c,0x40},
  {0x00,0x90,0x4c,0x64},
  {0x00,0x80,0x6c,0x40},
  {0x01,0x80,0x21,0x40},
  {0x00,0x80,0x4c,0x40},
  {0x00,0x90,0x53,0x64},
  {0x01,0x90,0x2d,0x64},
  {0x00,0x80,0x53,0x40},
  {0x00,0x90,0x54,0x64},
  {0x00,0x90,0x67,0x64},
  {0x01,0x80,0x2d,0x40},
  {0x00,0x90,0x53,0x64},
  {0x00,0x80,0x54,0x40},
  {0x00,0x90,0x5d,0x64},
  {0x00,0x80,0x67,0x40},
  {0x01,0x90,0x4a,0x64},
  {0x00,0x90,0x51,0x64},
  {0x00,0x80,0x53,0x40},
  {0x00,0x80,0x5d,0x40},
  {0x01,0x80,0x4a,0x40},
  {0x00,0x90,0x4c,0x64},
  {0x00,0x80,0x51,0x40},
  {0x00,0x90,0x73,0x69},
  {0x01,0x90,0x40,0x64},
  {0x00,0x80,0x4c,0x40},
  {0x00,0x90,0x58,0x64},
  {0x00,0x80,0x73,0x40},
  {0x01,0x80,0x40,0x40},
  {0x00,0x80,0x58,0x40},
  {0xff}
};

uint16_t seqPos;

void setup() {
  Serial.begin(31250);
  sendMidi(0xb0, 0x78, 0); // all sound off
}

void loop() {
  while (true) {
    const EventData& event = seq00[seqPos++];
    if (event.delta == 0xff) break;
    if (event.delta > 0) delay(100 * event.delta);
    sendMidi(event.status, event.data1, event.data2);
  }
  seqPos = 0;
}

void sendMidi(char stat, char data1, char data2) {
  Serial.print(stat, BYTE);
  Serial.print(data1, BYTE);
  Serial.print(data2, BYTE);
}
